name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]

env:
  GAR_LOCATION: 'us-central1' 
  REPOSITORY: 'tracking-system'
  SERVICE_NAME: 'ms-query-processor' 

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Authorize Docker push
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build and Push Image
        run: |
          docker build -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: Deploy Services to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} --quiet \
            --image ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ env.GAR_LOCATION }} \
            --platform managed \
            --add-cloudsql-instances "${{ secrets.GCP_SQL_CONNECTION_NAME }}" \
            --set-secrets="DATABASE_PASSWORD=DB_PASSWORD:latest" \
            --set-env-vars="DATABASE_HOST=/cloudsql/${{ secrets.GCP_SQL_CONNECTION_NAME }},PUBSUB_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }},DATABASE_USER=postgres,DATABASE_NAME=tracking_db"